{"version":3,"file":"Uploader.js","mappings":"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","sources":["webpack:///./Uploader.js"],"sourcesContent":["/** global: Craft */\n/** global: Garnish */\n\nCraft.CloudUploader = Craft.BaseUploader.extend(\n  {\n    element: null,\n    $fileInput: null,\n    _totalBytes: 0,\n    _uploadedBytes: 0,\n    _lastUploadedBytes: 0,\n    _validFileCounter: 0,\n\n    init: function ($element, settings) {\n      settings = $.extend({}, Craft.CloudUploader.defaults, settings);\n      this.base($element, settings);\n      this.element = $element[0];\n      this.$dropZone = settings.dropZone;\n      this.$fileInput = settings.fileInput || $element;\n      this.$fileInput.on('change', (event) =>\n        this.uploadFiles.call(this, event.target.files)\n      );\n\n      Object.entries(settings.events).forEach(([name, handler]) => {\n        this.element.addEventListener(name, handler);\n      });\n\n      if (this.allowedKinds && !this._extensionList) {\n        this._createExtensionList();\n      }\n\n      if (this.$dropZone) {\n        this.$dropZone.on({\n          dragover: (event) => {\n            if (this.handleDragEvent(event)) {\n              event.dataTransfer.dropEffect = 'copy';\n            }\n          },\n          drop: (event) => {\n            if (this.handleDragEvent(event)) {\n              this.uploadFiles(event.dataTransfer.files);\n            }\n          },\n          dragenter: this.handleDragEvent,\n          dragleave: this.handleDragEvent,\n        });\n      }\n    },\n\n    handleDragEvent: function (event) {\n      if (!event?.dataTransfer?.files) {\n        return false;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      return true;\n    },\n\n    uploadFiles: async function (FileList) {\n      const files = [...FileList];\n      const validFiles = files.filter((file) => {\n        let valid = true;\n\n        if (this._extensionList?.length) {\n          const matches = file.name.match(/\\.([a-z0-4_]+)$/i);\n          const fileExtension = matches[1];\n\n          if (this._extensionList.includes(fileExtension.toLowerCase())) {\n            this._rejectedFiles.type.push('“' + file.name + '”');\n            valid = false;\n          }\n        }\n\n        if (file.size > this.settings.maxFileSize) {\n          this._rejectedFiles.size.push('“' + file.name + '”');\n          valid = false;\n        }\n\n        if (\n          valid &&\n          typeof this.settings.canAddMoreFiles === 'function' &&\n          !this.settings.canAddMoreFiles(this._validFileCounter)\n        ) {\n          this._rejectedFiles.limit.push('“' + file.name + '”');\n          valid = false;\n        }\n\n        if (valid) {\n          this._totalBytes += file.size;\n          this._validFileCounter++;\n          this._inProgressCounter++;\n        }\n\n        return valid;\n      });\n\n      this.processErrorMessages();\n\n      this.element.dispatchEvent(new Event('fileuploadstart'));\n\n      for (const file of validFiles) {\n        await this.uploadFile(file);\n        this._inProgressCounter--;\n      }\n\n      this._totalBytes = 0;\n      this._uploadedBytes = 0;\n      this._lastUploadedBytes = 0;\n      this._inProgressCounter = 0;\n    },\n\n    uploadFile: async function (file) {\n      const formData = Object.assign({}, this.params, {\n        filename: file.name,\n        lastModified: file.lastModified,\n      });\n\n      try {\n        let response = await Craft.sendActionRequest(\n          'POST',\n          'cloud/get-upload-url',\n          {\n            data: formData,\n          }\n        );\n\n        Object.assign(formData, response.data, {\n          size: file.size,\n        });\n\n        try {\n          const {width, height} = await this.getImage(file);\n          Object.assign(formData, {width, height});\n        } catch (e) {}\n\n        await axios.put(response.data.url, file, {\n          headers: {\n            'Content-Type': file.type,\n          },\n          onUploadProgress: (axiosProgressEvent) => {\n            this._uploadedBytes =\n              this._uploadedBytes +\n              axiosProgressEvent.loaded -\n              this._lastUploadedBytes;\n            this._lastUploadedBytes = axiosProgressEvent.loaded;\n\n            this.element.dispatchEvent(\n              new CustomEvent('fileuploadprogressall', {\n                detail: {\n                  loaded: this._uploadedBytes,\n                  total: this._totalBytes,\n                },\n              })\n            );\n          },\n        });\n\n        response = await axios.post(this.settings.url, formData);\n        this.element.dispatchEvent(\n          new CustomEvent('fileuploaddone', {detail: response.data})\n        );\n      } catch (error) {\n        this.element.dispatchEvent(\n          new CustomEvent('fileuploadfail', {\n            detail: {\n              message: error.message,\n              filename: file.name,\n            },\n          })\n        );\n      } finally {\n        this._lastUploadedBytes = 0;\n        this.element.dispatchEvent(new Event('fileuploadalways'));\n      }\n    },\n\n    getImage: function (file) {\n      return new Promise((resolve, reject) => {\n        if (!file.type.startsWith('image/')) {\n          reject(new Error('File is not an image.'));\n        }\n\n        var reader = new FileReader();\n\n        reader.addEventListener(\n          'load',\n          (event) => {\n            const image = new Image();\n            image.src = reader.result;\n\n            image.addEventListener('load', (event) => {\n              resolve(event.target);\n            });\n\n            image.addEventListener('error', (event) => {\n              reject(new Error('Error loading image.'));\n            });\n          },\n          false\n        );\n\n        reader.readAsDataURL(file);\n      });\n    },\n  },\n  {\n    defaults: {\n      maxFileSize: Craft.maxUploadFileSize,\n      createAction: 'cloud/create-asset',\n      replaceAction: 'cloud/replace-file',\n    },\n  }\n);\n\n// Register it!\nCraft.registerAssetUploaderClass(\n  'craft\\\\cloud\\\\fs\\\\AssetFs',\n  Craft.CloudUploader\n);\n"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","minLen","_arrayLikeToArray","toString","from","test","arr","len","arr2","_uploadFile","_uploadFiles","Craft","CloudUploader","BaseUploader","extend","element","$fileInput","_totalBytes","_uploadedBytes","_lastUploadedBytes","_validFileCounter","init","$element","settings","_this","$","defaults","this","base","$dropZone","dropZone","fileInput","on","event","uploadFiles","target","files","entries","events","_ref","_ref2","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","_nonIterableRest","handler","addEventListener","allowedKinds","_extensionList","_createExtensionList","dragover","handleDragEvent","dataTransfer","dropEffect","drop","dragenter","dragleave","_event$dataTransfer","preventDefault","stopPropagation","_callee","FileList","validFiles","_iterator","_step","file","_this2","_context","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","filter","_this2$_extensionList","valid","fileExtension","match","includes","toLowerCase","_rejectedFiles","size","maxFileSize","canAddMoreFiles","limit","_inProgressCounter","processErrorMessages","dispatchEvent","Event","uploadFile","t0","_x2","_callee2","formData","response","_yield$this$getImage","width","height","_this3","_context2","assign","params","filename","lastModified","sendActionRequest","data","getImage","axios","put","url","headers","onUploadProgress","axiosProgressEvent","loaded","CustomEvent","detail","total","post","t1","message","_x3","startsWith","reader","FileReader","image","Image","src","readAsDataURL","maxUploadFileSize","createAction","replaceAction","registerAssetUploaderClass"],"sourceRoot":""}